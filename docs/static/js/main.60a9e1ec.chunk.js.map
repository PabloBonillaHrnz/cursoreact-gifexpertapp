{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","placeholder","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAACC,GAAW,IAC5BC,EAAgBD,EAAhBC,cAD2B,EAECC,mBAAS,IAFV,mBAE3BC,EAF2B,KAEhBC,EAFgB,KAiBlC,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,eAAeD,GACjBE,QAAQC,IAAI,gBACTN,EAAWO,OAAOC,OAAQ,IACzBV,GAAc,SAAAW,GAAI,OAAIT,GAAJ,mBAAkBS,OACpCR,EAAc,OAMlB,2BACAS,YAAa,eACbC,KAAK,OACLC,MAAOZ,EACPa,SAnBsB,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,YCPlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCJHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETN,EAFS,iDAEuCO,UAAUF,GAFjD,+DAGIG,MAAMR,GAHV,cAGTS,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MAEXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAG1Cb,QAAQC,IAAIwB,GAdG,kBAeRA,GAfQ,4CAAH,sDCEPK,EAAU,SAAC,GAAe,IAAdZ,EAAa,EAAbA,SAAa,ECDT,SAACA,GAAa,IAAD,EACbxB,mBAAS,CAC9B8B,KAAK,GACLO,SAAS,IAHyB,mBAC/BC,EAD+B,KACzBC,EADyB,KAgBtC,OAVAC,qBAAU,WAENjB,EAAQC,GAAUiB,MAAK,SAAAC,GACnBH,EAAS,CACLT,KAAMY,EACNL,SAAQ,SAGjB,CAACb,IAEGc,EDZuBK,CAAanB,GAA/BU,EAHsB,EAG3BJ,KAAYO,EAHe,EAGfA,QAInB,OACI,oCACA,4BAAKb,GAEDa,GAAW,sCAEf,yBAAKjB,UAAU,+CACX,4BAEIc,EAAOF,KAAI,SAACC,GAAD,OACP,kBAAC,EAAD,eAAaW,IAAMX,EAAIhB,IAAQgB,WEjBtCY,EAAe,WAAO,IAAD,EACK7C,mBAAS,CAAC,cADf,mBACvB8C,EADuB,KACZ/C,EADY,KAG9B,OACI,6BACI,4CAGA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ+C,EAAWd,KAAI,SAACR,GAAD,OACX,kBAAC,EAAD,CACAoB,IAAOpB,EACPA,SAAWA,UCbnCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.60a9e1ec.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = (props) => {\r\n    const {setCategories }=props;\r\n    const [inputValue,setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault(e);\r\n        console.log('Submit Hecho');\r\n        if(inputValue.trim().length >2 ){\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <form onSubmit = {handleSubmit}>\r\n        <input \r\n        placeholder= \"Escribe algo\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        />\r\n        </form>\r\n    )\r\n    \r\n}\r\n//Obliga que se reciba la funciÃ³n setCategories\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log(img);\r\n    return(\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n\r\n}","\r\n\r\nexport const getGifs = async( category)=>{\r\n        //El encode sirve para que no haya problemas con los espacios\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=77TpIgQLPwUWBt67v2XZQTtX7a4rtFTq`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        \r\n        const gifs = data.map(img => {\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                //Se le pone ? para preguntar si viene la imagen \r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        return gifs;\r\n    }","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) =>{\r\n\r\n//Se renombro data con images\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    \r\n    return(\r\n        <>\r\n        <h1>{category}</h1>\r\n        {\r\n            loading && <p>Loading</p> \r\n        }\r\n        <div className=\"card-grid animate__animated animate__fadeIn\">\r\n            <ol>\r\n            {\r\n                images.map((img) =>(\r\n                    <GifGridItem key ={img.id} {...img}/>\r\n                ))\r\n            }\r\n            </ol>\r\n        </div>\r\n        </>\r\n    )\r\n}","import {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const  useFetchGifs = (category) =>{\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category).then(imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading:false\r\n            })\r\n        });\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories,setCategories] = useState(['One Punch']);\r\n\r\n    return(\r\n        <div>\r\n            <h2>\r\n                GifExpertApp\r\n            </h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map((category) =>(\r\n                        <GifGrid\r\n                        key= { category }\r\n                        category={ category }\r\n                        />\r\n    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}